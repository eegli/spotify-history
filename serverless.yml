service: spotify-history

frameworkVersion: '2'
useDotenv: true
configValidationMode: error
unresolvedVariablesNotificationMode: error

plugins:
  - serverless-plugin-typescript

custom:
  env: ${opt:stage,'stg'} # Define default stage
  prefix: ${self:custom.env}-${self:service}
  dbName: ${self:custom.prefix}-db

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-central-1
  stackName: ${self:custom.prefix}-stack
  stage: ${self:custom.env}
  lambdaHashingVersion: 20201221
  versionFunctions: false
  eventBridge:
    useCloudFormation: true
  memorySize: 128 # Overwrite the default memory size. Default is 1024
  timeout: 5 # The default is 6 seconds. Note: API Gateway current maximum is 30 seconds
  logRetentionInDays: 7 # Set the default RetentionInDays for a CloudWatch LogGr
  environment:
    PUBLIC_TEST: Public 123
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:GetItem
            - dynamodb:PutItem
          Resource: 'arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.dbName}'

functions:
  spotify-history-lambda:
    name: ${self:custom.prefix}
    handler: src/index.handler
    events:
      - eventBridge:
          schedule: cron(0 * * * *)
    environment:
      STAGE: ${self:custom.env}
      NODE_ENV: ${self:custom.env}
      CLIENT_ID: ${env:CLIENT_ID}
      CLIENT_SECRET: ${env:CLIENT_SECRET}
      REFRESH_TOKEN: ${env:REFRESH_TOKEN}
      DB_NAME: ${self:custom.dbName}

resources:
  Resources:
    SpotifyHistoryDb:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.dbName}
        AttributeDefinitions:
          - AttributeName: dateId
            AttributeType: S
        KeySchema:
          - AttributeName: dateId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

package:
  exclude:
    - .git/**
    - README.md
    - .gitignore
